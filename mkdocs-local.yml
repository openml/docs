# Short version of the docs (without any external doc imports) for faster editing and previewing
# Run with `mkdocs serve -f mkdocs-local.yml`

site_name: Open Machine Learning
repo_url: https://github.com/openml/docs/
repo_name: 'openml/docs'
edit_uri: edit/master/docs/
site_url: https://docs.openml.org/
theme:
    name: "material"
    language: "en"
    features:
        - content.code.copy
        - content.action.edit
        - content.action.view
        - content.tabs.link
        - navigation.indexes
        - navigation.tabs
        - navigation.tabs.sticky
        - navigation.footer
        - search.highlight
        - search.suggest
        - toc.follow
    palette:
        # Palette toggle for automatic mode
        - media: "(prefers-color-scheme)"
          toggle:
            icon: material/brightness-auto

        # Palette toggle for light mode
        - media: "(prefers-color-scheme: light)"
          scheme: default
          toggle:
            icon: material/brightness-7

        # Palette toggle for dark mode
        - media: "(prefers-color-scheme: dark)"
          scheme: slate
          toggle:
            icon: material/brightness-4
    font:
        text: "Roboto"
        code: "Roboto Mono"
    logo: img/openml.png
    icon:
        edit: material/pencil 
        view: material/eye
markdown_extensions:
    - admonition
    - codehilite
    - tables
    - attr_list
    - md_in_html
    - toc:
        permalink: true
    - markdown_include.include:
        base_path: docs
    - pymdownx.arithmatex
    - pymdownx.betterem:
        smart_enable: all
    - pymdownx.caret
    - pymdownx.critic
    - pymdownx.details
    - pymdownx.inlinehilite
    - pymdownx.magiclink
    - pymdownx.mark
    - pymdownx.smartsymbols
    - pymdownx.superfences
    - pymdownx.tasklist:
        custom_checkbox: true
    - pymdownx.tilde
    - pymdownx.tabbed:
        alternate_style: true
    - pymdownx.inlinehilite
    - pymdownx.emoji:
        emoji_index: !!python/name:material.extensions.emoji.twemoji
        emoji_generator: !!python/name:material.extensions.emoji.to_svg
    - pymdownx.highlight:
        anchor_linenums: true
        linenums: true

plugins:
    - autorefs
    - section-index
    - redirects:
        redirect_maps:
            'APIs.md': 'https://www.openml.org/apis'
            'REST-API.md': 'https://www.openml.org/apis'
    - search:
        separator: '[\s\-\.]+'
        lang:
            - en
    - literate-nav:
        nav_file: SUMMARY.md
    - git-revision-date-localized:
        enable_creation_date: true
        fallback_to_build_date: true
    - git-committers:
        repository: openml/docs
nav:
    - OpenML:
        - Introduction: index.md
        - Getting Started: notebooks/getting_started.ipynb
        - Concepts:
            - Main concepts: concepts/index.md
            - Data: concepts/data.md
            - Tasks: concepts/tasks.md
            - Flows: concepts/flows.md
            - Runs: concepts/runs.md
            - Collections & Benchmarks: concepts/benchmarking.md
            - Tagging: concepts/tagging.md
            - Authentication: concepts/authentication.md
            - Sharing: concepts/sharing.md
        - Showcase : intro/showcase.md
        - Governance: intro/Governance.md
        - Terms : intro/terms.md
    - Datasets:
        - Creating datasets: data/index.md
        - Using datasets: data/use.md
        - Technical specs: data/specs.md
    - Benchmarking:
        - Benchmarking Suites: benchmark/index.md
        - AutoML Benchmark:
            - AutoML Benchmark: benchmark/automl/AutoML-Benchmark.md
            - Important Parameters: benchmark/automl/important_params.md
            - Benchmark on OpenML: benchmark/automl/benchmark_on_openml.md
            - Tutorials:
                - Basic Example - Random Forest: benchmark/automl/basic_example.md
                - Specific Task and Fold: benchmark/automl/specific_task_fold_example.md
    - Ecosystem:
        - Overview: ecosystem/index.md
        - Python Integrations: ecosystem/Python_extensions.md
        - Scikit-learn:
            - Introduction: ecosystem/Scikit-learn/index.md
            - Tutorials:
                - Basic tutorial: ecosystem/Scikit-learn/basic_tutorial.ipynb
                - Loading a dataset: ecosystem/Scikit-learn/datasets_tutorial.ipynb
        - MLR: ecosystem/mlr.md
        - Weka: ecosystem/Weka.md
        - MOA: ecosystem/MOA.md
        - Java: ecosystem/Java.md
        - REST API: ecosystem/Rest.md
    - Contributing:
        - How to Contribute: contributing/index.md
        - Documentation: contributing/OpenML-Docs.md
        - Backend:
            - Local Installation: contributing/backend/Local-Installation.md
            - Services: services/README.md
            - Datasets: contributing/backend/Datasets.md
            - Code structure: contributing/backend/API-development.md
            - Evaluation Engine: contributing/backend/Java-App.md
        - Frontend:
            - Getting started: contributing/website/Website.md
            - Flask backend: contributing/website/Flask.md
            - React frontend: contributing/website/React.md
            - Dash visualizations: contributing/website/Dash.md
        - Clients:
            - Client development: contributing/clients/Client-API-Standards.md
            - Metadata definition: contributing/clients/metadata_definition.md
            - REST API: contributing/clients/Rest.md
        - Style guide : contributing/Style.md
        - Resources: contributing/resources.md
    - Questions: help/index.md

extra_css:
    - css/extra.css
extra_javascript:
    - js/extra.js
exclude_docs: |
    scripts/
    old/
    python/openml/
    python/examples/
    pytorch/openml_pytorch/
    pytorch/Examples/index.md
    ecosystem/showcase.md
    